digraph "EntityWithoutHP"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node1 [label="{EntityWithoutHP\n|# x\l# y\l# speed\l# direction\l# isMoving\l# id\l# offset\l|+ EntityWithoutHP()\l+ EntityWithoutHP()\l+ ~EntityWithoutHP()\l+ GetPos_x()\l+ GetPos_y()\l+ PrintEntityInfo()\l+ GetSpeed()\l+ SetSpeed()\l+ GetDirection()\l+ SetDirection()\l+ SetDirection()\l+ Move()\l+ GetIsMoving()\l+ SetIsMovingFalse()\l+ Distance()\l+ GetID()\l+ MoveWithCollision()\l+ Test()\l+ GetOffset()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Classe représentant une entité immobile et immortel."];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{Animal\n|- stateMachine\l- timeNextChangeDirection\l|+ Animal()\l+ Animal()\l+ ~Animal()\l+ GetStateMachine()\l+ UpdateStateMachine()\l+ RandDirection()\l+ ChangeDirection()\l+ SetTimeNextChangeDirection()\l+ Test()\l}",height=0.2,width=0.4,color="black",URL="$classAnimal.html",tooltip="Représente un animal, hérite de EntityWithouHP."];
  Node1 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{EntityWithHP\n|# hp\l# damage\l# livingStatus\l# maxHP\l|+ EntityWithHP()\l+ EntityWithHP()\l+ ~EntityWithHP()\l+ GetHP()\l+ GetDamage()\l+ PrintEntityInfo()\l+ TakeDamage()\l+ SetLivingStatus()\l+ GetLivingStatus()\l+ GetMaxHP()\l+ Test()\l}",height=0.2,width=0.4,color="black",URL="$classEntityWithHP.html",tooltip="Classe représentant une entité qui peut infliger/subir des dégats et se déplacer."];
  Node3 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{Enemy\n|- stateMachine\l- timeNextChangeDirection\l- timeNextAttack\l|+ Enemy()\l+ Enemy()\l+ ~Enemy()\l+ GetStateMachine()\l+ UpdateStateMachine()\l+ RandDirection()\l+ ChangeDirection()\l+ SetTimeNextChangeDirection()\l+ IsTimeToAttack()\l+ SetTimeNextAttack()\l+ Test()\l}",height=0.2,width=0.4,color="black",URL="$classEnemy.html",tooltip="Classe représentant un ennemi qui peut infliger/subir des dégats et se déplacer."];
  Node3 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{Player\n||+ Player()\l+ Player()\l+ ~Player()\l+ DistanceShared_ptr()\l+ Attack()\l+ Test()\l}",height=0.2,width=0.4,color="black",URL="$classPlayer.html",tooltip="Classe représentant un joueur qui peut infliger/subir des dégats et se déplacer."];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{NPC\n|- dialog\l|+ NPC()\l+ NPC()\l+ ~NPC()\l+ GetDialog()\l+ Test()\l}",height=0.2,width=0.4,color="black",URL="$classNPC.html",tooltip="Classe représentant un personnage immobile non-joueur qui peut donner des points de vie et communique..."];
}
